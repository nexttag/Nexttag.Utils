name: Build and deploy Packages

on:
  push:
    branches:
      - main

env:
  PATH_DATABASE_POSTGRES:   ./Nexttag.Database.Postgres/Nexttag.Database.Postgres.csproj
  PATH_DATABASE_SQL_SERVER: ./Nexttag.Database.SqlServer/Nexttag.Database.SqlServer.csproj
  PATH_DATABASE: ./Nexttag.Database/Nexttag.Database.csproj
  PATH_APPLICATION_BASE: ./Nexttag.Application.Base/Nexttag.Application.Base.csproj
  PATH_CACHE: ./Nexttag.Cache/Nexttag.Cache.csproj
  PATH_AUTHENTICATION: ./Nexttag.Authentication/Nexttag.Authentication.csproj
  PATH_AUTHENTICATION_JWT: ./Nexttag.Authentication.Jwt/Nexttag.Authentication.Jwt.csproj
  PATH_AUTHORIZATION: ./Nexttag.Authorization/Nexttag.Authorization.csproj
  PATH_AWS_S3: ./Nexttag.Aws.S3/Nexttag.Aws.S3.csproj
  WORKFLOW_KEY: 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

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      output-database: ${{ steps.filter.outputs.database }}
      output-database-postgres: ${{ steps.filter.outputs.database-postgres }}
      output-database-sql-server: ${{ steps.filter.outputs.database-sql-server }}
      output-application-base: ${{ steps.filter.outputs.application-base }}
      output-cache: ${{ steps.filter.outputs.cache }}
      output-authentication: ${{ steps.filter.outputs.authentication }}
      output-Authorization: ${{ steps.filter.outputs.authorization }}
      output-authentication-jwt: ${{ steps.filter.outputs.authentication-jwt }}
      output-aws-s3: ${{ steps.filter.outputs.aws-s3 }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            database:
             - './Nexttag.Database/**'
            
            database-postgres:
             - './Nexttag.Database.Postgres/**'            
            
            database-sql-server:
             - './Nexttag.Database.SqlServer/**'
            
            application-base:
             - './Nexttag.Application.Base/**'
            
            cache:
             - './Nexttag.Cache/**'
            
            authentication:
              - './Nexttag.Authentication/**'
            
            authorization:
              - 'Nexttag.Authorization/**' 
            
            authentication-jwt:
              - './Nexttag.Authentication.jwt/**'
            
            aws-s3:
              - './Nexttag.Aws.S3/**' 
  
  build-and-deploy-database:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.output-application-base == 'true' }}
    steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build with dotnet
        run: dotnet build ${{env.PATH_DATABASE}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_DATABASE}} --configuration Release

      - name: Publish
        run: dotnet nuget push "Nexttag.Database/bin/Release/*.nupkg" -k ${{env.WORKFLOW_KEY}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate
  
  build-and-deploy-database-postgres:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.output-database-postgres == 'true' }}
    steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build with dotnet
        run: dotnet build ${{env.PATH_DATABASE_POSTGRES}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_DATABASE_POSTGRES}} --configuration Release

      - name: Publish
        run: dotnet nuget push "Nexttag.Database.Postgres/bin/Release/*.nupkg" -k ${{env.WORKFLOW_KEY}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate
  
  build-and-deploy-database-sql-server:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.output-database-sql-server == 'true' }}
    steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build with dotnet
        run: dotnet build ${{env.PATH_DATABASE_SQL_SERVER}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_DATABASE_SQL_SERVER}} --configuration Release

      - name: Publish
        run: dotnet nuget push "Nexttag.Database.SqlServer/bin/Release/*.nupkg" -k ${{env.WORKFLOW_KEY}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate
  
  build-and-deploy-application-base:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.output-application-base == 'true' }}
    steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build with dotnet
        run: dotnet build ${{env.PATH_APPLICATION_BASE}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_APPLICATION_BASE}} --configuration Release

      - name: Publish
        run: dotnet nuget push "Nexttag.Application.Base/bin/Release/*.nupkg" -k ${{env.WORKFLOW_KEY}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate
  
  build-and-deploy-cache:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.output-cache == 'true' }}
    steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build with dotnet
        run: dotnet build ${{env.PATH_CACHE}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_CACHE}} --configuration Release

      - name: Publish
        #run: dotnet nuget push "Nexttag.Cache/bin/Release/*.nupkg" -k ${{secrets.WORKFLOW_NUGET_AUTH}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate
        run: dotnet nuget push "Nexttag.Cache/bin/Release/*.nupkg" -k ${{env.WORKFLOW_KEY}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate
    
  build-and-deploy-authentication:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.output-authentication == 'TRUE' }}
    steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build with dotnet
        run: dotnet build ${{env.PATH_AUTHENTICATION}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_AUTHENTICATION}} --configuration Release

      - name: Publish
        run: dotnet nuget push "Nexttag.Authentication/bin/Release/*.nupkg" -k ${{env.WORKFLOW_KEY}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate

  build-and-deploy-authentication_jwt:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.output-authentication-jwt == 'true' }}
    steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build with dotnet
        run: dotnet build ${{env.PATH_AUTHENTICATION_JWT}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_AUTHENTICATION_JWT}} --configuration Release

      - name: Publish
        run: dotnet nuget push "Nexttag.Authentication.Jwt/bin/Release/*.nupkg" -k ${{env.WORKFLOW_KEY}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate

  build-and-deploy-authorization:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.output-authorization == 'true' }}
    steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build with dotnet
        run: dotnet build ${{env.PATH_AUTHORIZATION}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_AUTHORIZATION}} --configuration Release

      - name: Publish
        run: dotnet nuget push "Nexttag.Authorization/bin/Release/*.nupkg" -k ${{env.WORKFLOW_KEY}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate

  build-and-deploy-aws-s3:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.output-aws-s3 == 'true' }}
    steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build with dotnet
        run: dotnet build ${{env.PATH_AWS_S3}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_AWS_S3}} --configuration Release

      - name: Publish
        run: dotnet nuget push "Nexttag.Aws.S3/bin/Release/*.nupkg" -k ${{env.WORKFLOW_KEY}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate
