name: Build and deploy  Package

on:
  push:
    branches:
      - main

env:
  PATH_DATABASE_POSTGRES: ./Nexttag.Database.Postgres/Nexttag.Database.Postgres.csproj
  PATH_DATABASE: ./Nexttag.Database/Nexttag.Database.csproj
  PATH_APPLICATION_BASE: ./Nexttag.Application.Base/Nexttag.Application.Base.csproj

jobs:
    check-changes:
      runs-on: ubuntu-latest
      outputs:
        output-database: ${{ steps.filter.outputs.database }}
        output2: ${{ steps.filter.outputs.database-postgres }}
      steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
           database:
            - './Nexttag.Database/**'

           database-postgres:
            - './Nexttag.Database.Postgres/**'
            
      - name:  database-postgres tests change
        if: steps.filter.outputs.database-postgres == 'true'
        run: echo "Change file"

      - name:  not  database-postgres change
        if: steps.filter.outputs. database-postgres != 'true'
        run: echo "NOT change file"
        
      - name: Database tests change
        if: steps.filter.outputs.database == 'true'
        run: echo "Change file"

      - name:  not Database change
        if: steps.filter.outputs.database != 'true'
        run: echo "NOT change file"

    build-and-deploy-database:
      runs-on: ubuntu-latest
      needs: check-changes
      #if: needs.check-changes.outputs.database == 'true'
      steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
          filters: |
            workflows:
              - './Nexttag.Database/**'
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      
      - name: Build with dotnet
        run: dotnet build ${{env.PATH_DATABASE}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_DATABASE}} --configuration Release

      - name: Publish
        run: dotnet nuget push "Nexttag.Database/bin/Release/*.nupkg" -k ${{secrets.WORKFLOW_NUGET_AUTH}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate

    build-and-deploy-database-postgres:
      runs-on: ubuntu-latest
      needs: check-changes
      #if: needs.check-changes.outputs.database-postgres == 'true'
      steps:
      - uses: actions/checkout@main

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/nexttag/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
      - name: Build with dotnet
        run: dotnet build ${{env.PATH_DATABASE_POSTGRES}} --configuration Release

      - name: Create the Package
        run: dotnet pack ${{env.PATH_DATABASE_POSTGRES}} --configuration Release

      - name: Publish
        run: dotnet nuget push "Nexttag.Database.Postgres/bin/Release/*.nupkg" -k ${{secrets.WORKFLOW_NUGET_AUTH}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate

    build-and-deploy-application-base:
      runs-on: ubuntu-latest
      needs: check-changes
      #if: needs.check-changes.outputs.database-postgres == 'true'
      steps:
        - uses: actions/checkout@main

        - name: Set up .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: '6.0.x'
            source-url: https://nuget.pkg.github.com/nexttag/index.json
          env:
            NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

        - name: Build with dotnet
          run: dotnet build ${{env.PATH_APPLICATION_BASE}} --configuration Release

        - name: Create the Package
          run: dotnet pack ${{env.PATH_APPLICATION_BASE}} --configuration Release

        - name: Publish
          run: dotnet nuget push "Nexttag.Application.Base/bin/Release/*.nupkg" -k ${{secrets.WORKFLOW_NUGET_AUTH}} -s https://nuget.pkg.github.com/nexttag/index.json --skip-duplicate
